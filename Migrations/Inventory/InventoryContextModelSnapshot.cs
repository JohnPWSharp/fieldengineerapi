// <auto-generated />
using System;
using FieldEngineerApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FieldEngineerApi.Migrations.Inventory
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FieldEngineerApi.Models.BoilerPart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberInStock")
                        .HasColumnType("int");

                    b.Property<string>("Overview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("BoilerParts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 3L,
                            Name = "Caserta Stone Beige",
                            NumberInStock = 25,
                            Overview = "Extreme Series 18 in. x 18 in. carpet tiles are a durable and beautiful carpet solution specially engineered for both indoor and outdoor residential installations.",
                            Price = 8.1m
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 2L,
                            Name = "Caserta Sky Grey",
                            NumberInStock = 30,
                            Overview = "Extreme Series 18 in. x 18 in. carpet tiles are a durable and beautiful carpet solution specially engineered for both indoor and outdoor residential installations.",
                            Price = 8.1m
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            Name = "Ageless Beauty Clay",
                            NumberInStock = 5,
                            Overview = "Add some fashion to your floors with the Shaw Ageless Beauty Carpet collection.",
                            Price = 1.98m
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 4L,
                            Name = "Lush II Tundra",
                            NumberInStock = 12,
                            Overview = "Made with 100% premium nylon fiber, this textured carpet creates a warm, casual atmosphere that invites you to relax and thoroughly enjoy your home.",
                            Price = 3.79m
                        });
                });

            modelBuilder.Entity("FieldEngineerApi.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Boiler"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Sprocket"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Flange"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Exchanger"
                        });
                });

            modelBuilder.Entity("FieldEngineerApi.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BoilerPartId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Delivered")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DeliveredDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.Property<long>("quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BoilerPartId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BoilerPartId = 1L,
                            Delivered = false,
                            DeliveredDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderedDateTime = new DateTime(2021, 3, 6, 9, 58, 35, 851, DateTimeKind.Local).AddTicks(251),
                            TotalPrice = 243.0m,
                            quantity = 30L
                        },
                        new
                        {
                            Id = 2L,
                            BoilerPartId = 3L,
                            Delivered = true,
                            DeliveredDateTime = new DateTime(2021, 3, 7, 9, 58, 35, 853, DateTimeKind.Local).AddTicks(6975),
                            OrderedDateTime = new DateTime(2021, 3, 4, 9, 58, 35, 853, DateTimeKind.Local).AddTicks(6952),
                            TotalPrice = 39.6m,
                            quantity = 20L
                        });
                });

            modelBuilder.Entity("FieldEngineerApi.Models.BoilerPart", b =>
                {
                    b.HasOne("FieldEngineerApi.Models.Category", "Category")
                        .WithMany("BoilerParts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FieldEngineerApi.Models.Order", b =>
                {
                    b.HasOne("FieldEngineerApi.Models.BoilerPart", "BoilerPart")
                        .WithMany("Orders")
                        .HasForeignKey("BoilerPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoilerPart");
                });

            modelBuilder.Entity("FieldEngineerApi.Models.BoilerPart", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FieldEngineerApi.Models.Category", b =>
                {
                    b.Navigation("BoilerParts");
                });
#pragma warning restore 612, 618
        }
    }
}
